{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\sandesh\\\\Desktop\\\\bogglehw\\\\src\\\\FoundSolutions.js\";\nimport React from 'react';\nimport './FoundSolutions.css';\n\nfunction FoundSolutions({\n  words,\n  headerText\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Found-solutions-list\",\n    children: [words.length > 0 && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [headerText, \": \", words.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: words.map(solution => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: solution\n        }, solution, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 42\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FoundSolutions;\nexport default FoundSolutions;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoundSolutions\");","map":{"version":3,"sources":["C:/Users/sandesh/Desktop/bogglehw/src/FoundSolutions.js"],"names":["React","FoundSolutions","words","headerText","length","map","solution"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAxB,EAA8C;AAE5C,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,eAEGD,KAAK,CAACE,MAAN,GAAe,CAAf,iBACC;AAAA,iBAAKD,UAAL,QAAmBD,KAAK,CAACE,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKE;AAAA,gBACGF,KAAK,CAACG,GAAN,CAAWC,QAAD,IAAc;AAAC,4BAAO;AAAA,oBAAoBA;AAApB,WAASA,QAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AAA0C,OAAnE;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAbQL,c;AAeT,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\nimport './FoundSolutions.css';\r\n\r\nfunction FoundSolutions({ words, headerText}) {\r\n\r\n  return (\r\n    <div className=\"Found-solutions-list\">\r\n    \r\n      {words.length > 0 &&\r\n        <h4>{headerText}: {words.length}</h4>\r\n      }\r\n      <ul>\r\n        {words.map((solution) => {return <li key={solution}>{solution}</li>})}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoundSolutions;\r\n"]},"metadata":{},"sourceType":"module"}