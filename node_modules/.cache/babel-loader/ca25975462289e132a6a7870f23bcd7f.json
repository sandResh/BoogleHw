{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sandesh\\\\Desktop\\\\bogglehw\\\\src\\\\GuessInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport './GuessInput.css';\n\nfunction GuessInput({\n  allSolutions,\n  foundSolutions,\n  correctAnswerCallback\n}) {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n\n  function evaluateInput() {\n    if (foundSolutions.includes(input)) {\n      setLabelText(input + \" has already been found!\");\n    } else if (allSolutions.includes(input)) {\n      correctAnswerCallback(input);\n      setLabelText(input + \" is correct!\");\n    } else {\n      setLabelText(input + \" is incorrect!\");\n    }\n  }\n\n  function keyPress(e) {\n    if (e.key === 'Enter') {\n      e.target.value = \"\";\n      evaluateInput();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Guess-input\",\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Guess the word\",\n      variant: \"outlined\",\n      onKeyPress: e => keyPress(e),\n      onChange: event => setInput(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GuessInput, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n\n_c = GuessInput;\nexport default GuessInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuessInput\");","map":{"version":3,"sources":["C:/Users/sandesh/Desktop/bogglehw/src/GuessInput.js"],"names":["React","useState","TextField","GuessInput","allSolutions","foundSolutions","correctAnswerCallback","input","setInput","evaluateInput","includes","setLabelText","keyPress","e","key","target","value","event"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,kBAAP;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA,YAAD;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,CAApB,EAA2E;AAAA;;AAGzE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASQ,aAAT,GAAyB;AACvB,QAAIJ,cAAc,CAACK,QAAf,CAAwBH,KAAxB,CAAJ,EAAoC;AAClCI,MAAAA,YAAY,CAACJ,KAAK,GAAG,0BAAT,CAAZ;AACD,KAFD,MAEO,IAAIH,YAAY,CAACM,QAAb,CAAsBH,KAAtB,CAAJ,EAAkC;AACvCD,MAAAA,qBAAqB,CAACC,KAAD,CAArB;AACAI,MAAAA,YAAY,CAACJ,KAAK,GAAG,cAAT,CAAZ;AACD,KAHM,MAGA;AACLI,MAAAA,YAAY,CAACJ,KAAK,GAAG,gBAAT,CAAZ;AACD;AACF;;AAED,WAASK,QAAT,CAAkBC,CAAlB,EAAqB;AACnB,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBD,MAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,GAAiB,EAAjB;AACAP,MAAAA,aAAa;AACd;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC,gBAArC;AAAsD,MAAA,OAAO,EAAC,UAA9D;AAA0E,MAAA,UAAU,EAAGI,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAArG;AAA0G,MAAA,QAAQ,EAAGI,KAAD,IAAWT,QAAQ,CAACS,KAAK,CAACF,MAAN,CAAaC,KAAd;AAAvI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA5BQb,U;;KAAAA,U;AA8BT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport './GuessInput.css';\r\n\r\nfunction GuessInput({allSolutions, foundSolutions, correctAnswerCallback}) {\r\n\r\n  \r\n  const [input, setInput] = useState(\"\");\r\n\r\n  function evaluateInput() {\r\n    if (foundSolutions.includes(input)) {\r\n      setLabelText(input + \" has already been found!\");\r\n    } else if (allSolutions.includes(input)) {\r\n      correctAnswerCallback(input);\r\n      setLabelText(input + \" is correct!\");\r\n    } else {\r\n      setLabelText(input + \" is incorrect!\");\r\n    }\r\n  }\r\n\r\n  function keyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      e.target.value = \"\";\r\n      evaluateInput()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Guess-input\">\r\n      <TextField id=\"outlined-basic\" label=\"Guess the word\" variant=\"outlined\"  onKeyPress={(e) => keyPress(e)} onChange={(event) => setInput(event.target.value)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GuessInput;\r\n"]},"metadata":{},"sourceType":"module"}